<style>
    .header {
        background-color: rgb(231, 231, 231);
    }
</style>

<div class="page-content-wrapper py-3">
    <div class="container-lg">
        <div class="checkout-wrapper-area">
            <form id="checkout-form">
                <div class="row g-2">
                    <div class="col-lg-6">
                        <div class="card shadow">
                            <div class="card-body">
                                <h6 class="mb-3">Enter your billing details</h6>
                                <input type="hidden" name="userId" value="{{user._id}}">
                                <input type="hidden" name="roomId" value="{{room._id}}">

                                <div class="form-group">
                                    <input class="form-control mb-3" type="text" name="Fname"
                                        value="{{user.Fname}} {{user.Lname}}" placeholder="Your full name">
                                </div>
                                <div class="form-group">
                                    <input class="form-control mb-3" type="number" name="Phone" value="{{user.Phone}}"
                                        placeholder="Your Number">
                                </div>
                                <div class="form-group">
                                    <input class="form-control mb-3" type="email" name="Email" value="{{user.Email}}"
                                        placeholder="Your email">
                                </div>
                            </div>
                        </div>

                        <div class="card shadow mt-2">
                            <div class="card-body">
                                <h6 class="mb-3">Addons</h6>
                                <hr>
                                <div class="form-group mb-3">
                                    <label>Select Bedsheet Color</label>
                                    <select class="form-select" name="bedsheet">
                                        <option selected value="not selected" disabled>Select Color</option>
                                        <option value="White">White</option>
                                        <option value="Dark Gray">Dark Gray</option>
                                        <option value="Pista Green">Pista Green</option>
                                        <option value="Pink">Pink</option>
                                    </select>
                                </div>
                                 <div class="form-group mb-3">
                                    <label>Select Extra Bed</label>
                                    <select class="form-select" name="beds">
                                        <option selected value="not selected" disabled>Select</option>
                                        <option value="1">1</option>
                                        <option value="2">2</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label>Note</label>
                                    <textarea class="form-control mb-3" name="Note" cols="10" rows="2"
                                        placeholder="Write Anything..."></textarea>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-6">
                        <div class="card shadow mb-2 p-4">
                            <h6>Room Details</h6>
                            <hr>
                            <b>Room Name:</b> {{room.roomname}}<br>
                            <b>Price per Night:</b> {{room.Price}}/-<br>
                        </div>

                        <div class="card shadow p-4">
                             <hr>
                            <div class="form-check mb-2">
                                <input class="form-check-input" type="radio" name="payment-method" value="COD" checked>
                                <label>Booking (without payment)</label>
                            </div>
                            <div class="form-check mb-2">
                                <input class="form-check-input" type="radio" name="payment-method" value="ONLINE">
                                <label>Pay & Book</label>
                            </div>
                            <div class="form-check mb-2">
                                <input class="form-check-input" type="radio" name="payment-method" value="ADVANCE">
                                <label>Pay Advance ({{room.AdvPrice}}/-)</label>
                            </div>
                            <label>Check-in Date</label>
                            <input type="date" class="form-control" name="checkin" id="checkinDate" required>

                            <label>Check-out Date</label>
                            <input type="date" class="form-control" name="checkout" id="checkoutDate" required>

                            <div id="availabilityMessage" style="color: red; display: none;"></div>
                             <button id="check" class="btn btn-dark mt-3 w-100">Check Availability</button>

                            <button id="smt" class="btn btn-dark mt-3 w-100" type="submit" disabled>Book Now</button>
                        </div>
                    </div>
                </div>
            </form>
           
        </div>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>
document.getElementById("check").addEventListener("click", async function (event) {
    event.preventDefault();
    
    const checkinDate = document.getElementById("checkinDate").value;
    const checkoutDate = document.getElementById("checkoutDate").value;
    const roomId = "{{room._id}}";

    if (!checkinDate || !checkoutDate) {
        alert("Please select both check-in and check-out dates.");
        return;
    }

    if (new Date(checkoutDate) <= new Date(checkinDate)) {
        alert("Check-out date must be after check-in date.");
        return;
    }

    try {
        const response = await fetch(`/check-availability/?roomId=${roomId}&checkin=${checkinDate}&checkout=${checkoutDate}`);
        const data = await response.json();
        const availabilityMessage = document.getElementById("availabilityMessage");
        const bookButton = document.getElementById("smt");

        if (data.available) {
            availabilityMessage.style.color = "green";
            availabilityMessage.textContent = "Room is available!";
            bookButton.disabled = false;
        } else {
            availabilityMessage.style.color = "red";
            availabilityMessage.textContent = "Room is not available.";
            bookButton.disabled = true;
        }

        availabilityMessage.style.display = "block";
    } catch (error) {
        console.error("Error checking availability:", error);
        alert("Something went wrong! Please try again.");
    }
});
</script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>


<script>
    $("#checkout-form").submit((e) => {
        e.preventDefault();

        let selectedPaymentMethod = $("input[name='payment-method']:checked").val();
        let advanceAmount = {{ room.AdvPrice }}; // Ensure correct Handlebars syntax
    let totalAmount = {{ room.Price }};

    let paymentAmount = selectedPaymentMethod === "ADVANCE" ? advanceAmount : totalAmount;

    $.ajax({
        url: '/place-order',
        method: 'post',
        data: $("#checkout-form").serialize(),
        success: (response) => {
            if (response.codSuccess) {
                location.href = '/order-placed';
            } else {
                // Pass the correct amount to Razorpay
                razorpayPayment(response, paymentAmount);
            }
        },
        error: (xhr, status, error) => {
            console.error("Error placing order:", xhr.responseText);
            alert("An error occurred while placing the order. Please try again.");
        }
    });
    });
</script>

<script>
    function razorpayPayment(order) {
        var options = {
            "key": "rzp_test_8NokNgt8cA3Hdv", // Enter the Key ID generated from the Dashboard
            "amount": order.amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
            "currency": "INR",
            "name": "Ginberry",
            "description": "Test Transaction",
            "image": "https://example.com/your_logo",
            "order_id": order.id, //This is a sample Order ID. Pass the id obtained in the response of Step 1
            "handler": function (response) {
                verifyPayment(response, order)
            },
            "prefill": {
                "name": "Shamla",
                "email": "Shamla@gmail.com",
                "contact": "8156867466"
            },
            "notes": {
                "address": "Razorpay Corporate Office"
            },
            "theme": {
                "color": "#3399cc"
            }
        }
        var rzp1 = new Razorpay(options);
        rzp1.open()
    }


    function verifyPayment(payment, order, amountPaid) {
        $.ajax({
            url: '/verify-payment',
            data: {
                payment,
                order,
                amountPaid // Send the correct paid amount to the backend
            },
            method: 'post',
            success: (response) => {
                if (response.status) {
                    location.href = '/order-placed';
                } else {
                    alert("Payment verification failed.");
                }
            }
        });
    }


</script>

<script>
    const dateInput = document.getElementById('dateInput');

    // Get today's date
    const today = new Date();
    const yyyy = today.getFullYear();
    const mm = String(today.getMonth() + 1).padStart(2, '0'); // Months are zero-based
    const dd = String(today.getDate()).padStart(2, '0');

    // Set the minimum date to today
    dateInput.setAttribute('min', ${yyyy}-${mm}-${dd});

    // Function to disable weekends
    dateInput.addEventListener('input', async function () {
        const selectedDate = new Date(this.value);
        const day = selectedDate.getUTCDay();

        // Check if the selected date is Saturday (6) or Sunday (0)

        // Check if the date is already booked
        const response = await fetch(/check-date-booking, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ selecteddate: this.value }) // Send the selected date
        });

        const data = await response.json();
        if (data.booked) {
            alert("This date is already booked.");
            this.value = ""; // Clear the input
        }

    });
</script>